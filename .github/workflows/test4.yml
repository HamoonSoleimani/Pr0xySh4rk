name: Pr0xySh4rkTest4 Daily Config Update

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update-config:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests[socks]
          sudo apt-get update
          sudo apt-get install -y proxychains4 fping wget unzip
          sudo setcap cap_net_raw+ep /usr/bin/fping

      - name: Check if Xray folder exists (Method 2: Folder)
        id: check_xray_folder
        run: |
          if [ -d "xray" ]; then
            echo "::set-output name=folder_exists::true"
          else:
            echo "::set-output name=folder_exists::false"
          fi

      - name: Download and Install Xray-core (Method 1: Download)
        if: ${{ steps.check_xray_folder.outputs.folder_exists != 'true' }}
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/XTLS/Xray-core/releases/latest | jq -r '.tag_name')
          wget -q "https://github.com/XTLS/Xray-core/releases/download/${LATEST_RELEASE}/Xray-linux-64.zip" -O Xray.zip
          unzip -o Xray.zip -d xray
          chmod +x xray/xray
          sudo mv xray/xray /usr/local/bin/xray
          sudo mv xray/geosite.dat /usr/local/bin/
          sudo mv xray/geoip.dat /usr/local/bin/

      - name: Copy Xray files (Method 2: Folder)
        if: ${{ steps.check_xray_folder.outputs.folder_exists == 'true' }}
        run: |
          sudo cp xray/xray /usr/local/bin/
          sudo cp xray/geosite.dat /usr/local/bin/
          sudo cp xray/geoip.dat /usr/local/bin/
          sudo chmod +x /usr/local/bin/xray

      - name: Run Pr0xySh4rkTest Script
        run: |
          python Pr0xySh4rk3.py --input subs1.txt --output Pr0xySh4rkTest.txt --test real

      - name: Commit and Push Changes
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git
          git fetch origin main
          git pull --rebase --autostash origin main
          git add Pr0xySh4rkTest.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update Pr0xySh4rkTest.txt via GitHub Actions"
            git push origin HEAD:main
          else:
            echo "No changes to commit."
          fi
